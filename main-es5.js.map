{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/pages/home/add-edit-books/add-edit-books.component.ts","webpack:///src/app/pages/home/add-edit-books/add-edit-books.component.html","webpack:///src/app/pages/home/home.component.ts","webpack:///src/app/pages/home/home.component.html","webpack:///src/app/services/books.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","entryComponents","providers","bootstrap","AddEditBooksComponent","bookService","bsModalRef","book","category","description","price","rate","confirmAdd","confirm","addBook","subscribe","bookAdded","console","log","onClose","hide","err","confirmEdit","editBook","bookEdit","HomeComponent","bookservice","modalService","books","onFetchAllData","getAllBooks","Allbooks","show","content","added","initialState","updated","bookid","confirmDelete","deleteBook","deleted","onAdd","BooksService","http","get","apiUrl","body","post","put","providedIn","environment","apiUrl_local","production","bootstrapModule","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './pages/home/home.component';\n\n\nconst routes: Routes = [\n  { path: '', component: HomeComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'booksList';\n}\n","<router-outlet></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './pages/home/home.component';\nimport { AddEditBooksComponent } from './pages/home/add-edit-books/add-edit-books.component';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { HttpClientModule } from '@angular/common/http'\nimport { ModalModule }  from 'ngx-bootstrap/modal'\nimport { FormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    AddEditBooksComponent\n\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    NgbModule,\n    HttpClientModule,\n    ModalModule.forRoot(),\n    FormsModule\n  ],\n  entryComponents: [\n    AddEditBooksComponent\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { bookRequestModal } from 'src/app/modals/Book-request-modal';\nimport { BooksService } from 'src/app/services/books.service';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\n\n@Component({\n  selector: 'app-add-edit-books',\n  templateUrl: './add-edit-books.component.html',\n  styleUrls: ['./add-edit-books.component.css']\n})\nexport class AddEditBooksComponent implements OnInit {\n  book : bookRequestModal = {\n    id: 0,\n    title:'',\n    category:'',\n    description:'',\n    price: '',\n    rate: ''\n  }\n  onClose : any\n  constructor(\n    private bookService : BooksService,\n    public bsModalRef : BsModalRef\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  onAddBook(){\n    let confirmAdd = confirm(\"Add Book\")\n    if(confirmAdd){\n      this.bookService.addBook(this.book).subscribe(bookAdded =>{\n        console.log(\"Book Added \");\n        this.onClose(bookAdded)\n        this.bsModalRef.hide(),err=>{console.log(err);\n        }\n        \n      })\n    }\n  }\n\n  onEditBook(){\n    let confirmEdit= confirm(\"Edit Book\")\n    if(confirmEdit){\n      this.bookService.editBook(this.book).subscribe(bookEdit=>{\n        console.log(bookEdit);\n        this.onClose(bookEdit)\n        this.bsModalRef.hide(),err=>{console.log(err);\n        }\n        \n      })\n    }\n  }\n\n}\n","<div class=\"container\">\n    <div id=\"header-modal\">\n        <p *ngIf=\"book.id === 0 \">Add New Book</p>\n        <p *ngIf=\"book.id > 0 \">Edit Book</p>\n    </div>\n    <div class=\"modal-header\">\n\n        <form>\n            <div class=\"form-row\">\n                <div class=\"form-group col-md-6\">\n                    <label for=\"inputbook\">Book Title</label>\n                    <input [(ngModel)]=\"book.title\" type=\"text\" class=\"form-control\" id=\"inputbook\"\n                        [ngModelOptions]=\"{standalone: true}\">\n                </div>\n                <div class=\"form-group col-md-6\">\n                    <label for=\"inputCategory\">Category</label>\n                    <input [(ngModel)]=\"book.category\" type=\"text\" class=\"form-control\" id=\"inputCategory\"\n                        [ngModelOptions]=\"{standalone: true}\">\n                </div>\n            </div>\n            <div class=\"form-group\">\n                <label for=\"inputdes\">Description</label>\n                <input [(ngModel)]=\"book.description\" type=\"text\" class=\"form-control\" id=\"inputdes\"\n                    [ngModelOptions]=\"{standalone: true}\">\n            </div>\n\n            <div class=\"form-row\">\n                <div class=\"form-group col-md-6\">\n                    <label for=\"inputCity\">Price</label>\n                    <input [(ngModel)]=\"book.price\" type=\"text\" class=\"form-control\" id=\"inputCity\"\n                        [ngModelOptions]=\"{standalone: true}\">\n                </div>\n                <div class=\"form-group col-md-6\">\n                    <label for=\"inputState\">Book Rate</label>\n                    <input [(ngModel)]=\"book.rate\" type=\"text\" class=\"form-control\" id=\"inputCity\"\n                        [ngModelOptions]=\"{standalone: true}\">\n                </div>\n            </div>\n            <button *ngIf=\"book.id === 0 \" class=\"btn btn-primary\" (click)=\"onAddBook()\">Add Book</button>\n            <button *ngIf=\"book.id  >  0 \" class=\"btn btn-primary\" (click)=\"onEditBook()\">Edit Book</button>\n            &nbsp;<button (click)=\"bsModalRef.hide()\" class=\"btn btn-danger\">Cancel</button>\n        </form>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { BooksService } from 'src/app/services/books.service';\nimport { BsModalService, BsModalRef } from 'ngx-bootstrap/modal';\nimport { AddEditBooksComponent } from './add-edit-books/add-edit-books.component';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n  bsModalRef: BsModalRef;\n  books: any = []\n  constructor(\n    private bookservice: BooksService ,\n    private modalService: BsModalService\n    ) { }\n\n  ngOnInit(): void {\n    this.onFetchAllData()\n\n\n  }\n  onFetchAllData() {\n    this.bookservice.getAllBooks().subscribe(Allbooks => {\n      this.books = Allbooks\n      console.log(this.books)\n    })\n\n  }\n  onAdd() {\n    this.bsModalRef = this.modalService.show(AddEditBooksComponent);\n    this.bsModalRef.content.onClose = (added) =>{\n      if(added){\n        this.onFetchAllData()\n      }\n    }\n    console.log(\"Entered\");\n  }\n  onEditBook(book:any) {\n    console.log(book);\n    this.bsModalRef = this.modalService.show(AddEditBooksComponent,{initialState : {book}})\n    this.bsModalRef.content.onClose = (updated) =>{\n      if(updated){\n        this.onFetchAllData()\n      }\n    }\n  }\n  onDelBook(bookid: any) {\n\n    let confirmDelete = confirm('Are You Sure')\n    if (confirmDelete) {\n      this.bookservice.deleteBook(bookid).subscribe(deleted => {\n        this.onFetchAllData()\n      })\n    } else {\n      console.log(confirmDelete)\n    }\n\n  }\n\n}\n","<div class=\"container\">\n    <div class=\"header\">\n        <h1>Book List</h1>\n    </div>\n    <button class=\"btn-Add btn btn-primary\" (click)=\"onAdd()\">Add New Book</button>\n    <table class=\"table table-striped\">\n        <thead>\n            <tr>\n                <th scope=\"col\">ID</th>\n                <th scope=\"col\">Book Title</th>\n                <th scope=\"col\">Category</th>\n                <th scope=\"col\">Description</th>\n                <th scope=\"col\">Price</th>\n                <th scope=\"col\">Rate</th>\n                <th scope=\"col\">Action</th>\n            </tr>\n        </thead>\n        <tbody>\n            <tr *ngFor=\"let book of books; let i =index\">\n                <th scope=\"row\">{{i + 1}} </th>\n                <td>{{book.title}}</td>\n                <td>{{book.category}}</td>\n                <td>{{book.description}}</td>\n                <td>{{book.price}} $</td>\n                <td>{{book.rate}} </td>\n                <td>\n                    <button class=\"btn-edit btn btn-primary\" (click)=\"onEditBook(book)\">Edit</button>\n                    <button class=\"btn btn-danger\" (click)=\"onDelBook(book.id)\">Delete</button>\n                </td>\n            </tr>\n\n        </tbody>\n    </table>\n</div>\n\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { bookRequestModal } from '../modals/Book-request-modal';\n\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BooksService {\n\n  constructor(private http :HttpClient ) { }\n\n  getAllBooks(){\n    return this.http.get(environment.apiUrl + '/books/')  \n  }\n  addBook(body : bookRequestModal){\n    return this.http.post(environment.apiUrl +'/books/',body)\n  }\n\n  editBook(body:bookRequestModal){\n    return this.http.put(environment.apiUrl +'/books/' + body.id,  body)\n  }\n\n  deleteBook(id : bookRequestModal){\n    return this.http.delete(environment.apiUrl + '/books/' + id )\n    // return this.http.delete(`${environment.apiUrl}/books/${id}` )\n  }\n}\n\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  apiUrl_local : 'Books-List/booksList/src/app/db/book.json',\n  apiUrl : 'http://localhost:3000',\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}